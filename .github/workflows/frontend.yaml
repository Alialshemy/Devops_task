name: Build, Scan & Push Frontend to AWS ECR

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
permissions:
  id-token: write
  contents: read
jobs:
  build-scan-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      # ---------------- AWS Auth ----------------
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: github-actions-frontend

      # ---------------- ECR Login ----------------
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # ---------------- Docker Build ----------------
      - name: Build Docker image
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/frontend-app:latest"
          docker build -t frontend-app ./frontend
          docker tag frontend-app:latest $IMAGE_URI

      # ---------------- Trivy Scan ----------------
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@v2
        with:
          image-ref: frontend-app:latest
          format: table
          exit-code: 1       # fail workflow if vulnerabilities found
          severity: HIGH,CRITICAL

      # ---------------- Push to ECR ----------------
      - name: Push Docker image to ECR
        run: |
          IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/frontend-app:latest"
          docker push $IMAGE_URI
